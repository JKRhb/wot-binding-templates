@prefix : <https://www.w3.org/2019/wot/mqtt#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix dct: <http://purl.org/dc/terms/> .
@base <https://www.w3.org/2019/wot/mqtt> .

<> rdf:type owl:Ontology ;
   rdfs:label "MQTT in RDF"@en ;
   rdfs:comment "Vocabulary to represent MQTT packets in RDF."@en ;
   vann:preferredNamespacePrefix "mqv" ;
   vann:preferredNamespaceUri : ;
   dct:author _:michael ;
   dct:contributor _:ege, _:seb, <https://www.vcharpenay.link/#me> .

<https://www.vcharpenay.link/#me> a schema:Person ;
                                  schema:name "Victor Charpenay" ;
                                  schema:affiliation _:siemens .

_:ege a schema:Person ;
    schema:name "Ege Korkan" ;
    schema:affiliation _:siemens .

_:michael a schema:Person ;
    schema:name "Michael Koster" ;
    schema:affiliation _:ie .

_:seb a schema:Person ;
    schema:name "Sebastian Käbisch" ;
    schema:affiliation _:siemens .

_:siemens a schema:Organization ;
    schema:name "Siemens AG" ;
    schema:url "https://www.siemens.com/" .

_:ie a schema:Organization ;
    schema:name "Invited Expert" ;
    schema:url "https://github.com/mjkoster/" .

:payload rdf:type owl:ObjectProperty ;
         rdfs:isDefinedBy <> ;
         rdfs:label "payload"@en ;
         rdfs:comment "Some MQTT Control Packets contain a Payload as the final part of the packet. In the PUBLISH packet this is the Application Message."@en ;
         schema:domainIncludes :ControlPacket .

:fixedHeaderFlag rdf:type owl:DatatypeProperty ;
                 rdfs:isDefinedBy <> ;
                 rdfs:label "fixedHeaderFlag"@en ;
                 rdfs:comment "Each MQTT Control Packet contains a Fixed Header."@en ;
                 schema:domainIncludes :ControlPacket .

:variableHeaderFlag rdf:type owl:DatatypeProperty ;
                    rdfs:isDefinedBy <> ;
                    rdfs:label "variableHeaderFlag"@en ;
                    rdfs:comment "Some types of MQTT Control Packet contain a Variable Header component. It resides between the Fixed Header and the Payload. The content of the Variable Header varies depending on the packet type."@en ;
                    schema:domainIncludes :ControlPacket .

:hasDUPFlag rdf:type owl:DatatypeProperty ;
            rdfs:isDefinedBy <> ;
            rdfs:subPropertyOf :fixedHeaderFlag ;
            rdfs:label "hasDUPFlag"@en ;
            rdfs:comment "If the DUP flag is set, it indicates that this might be re-delivery of an earlier attempt to send the packet."@en ;
            schema:domainIncludes :SUBSCRIBEPacket .

:hasQoSFlag rdf:type owl:DatatypeProperty ;
            rdfs:isDefinedBy <> ;
            rdfs:subPropertyOf :fixedHeaderFlag ;
            rdfs:label "hasQoSFlag"@en ;
            rdfs:comment "This field indicates the level of assurance for delivery of an Application Message."@en ;
            schema:domainIncludes :SUBSCRIBEPacket .

:hasRETAINFlag rdf:type owl:DatatypeProperty ;
               rdfs:isDefinedBy <> ;
               rdfs:subPropertyOf :fixedHeaderFlag ;
               rdfs:label "hasRETAINFlag"@en ;
               rdfs:comment "If the RETAIN flag is set to 1 in a PUBLISH packet sent by a Client to a Server, the Server must replace any existing retained message for this topic and store the Application Message, so that it can be delivered to future subscribers whose subscriptions match its Topic Name."@en ;
               schema:domainIncludes :SUBSCRIBEPacket .

:ControlPacket rdf:type owl:Class ;
               rdfs:isDefinedBy <> ;
               rdfs:label "ControlPacket"@en ;
               rdfs:comment "An MQTT Control Packet consists of up to three parts: fixed header (prsesent in all Control Packets), variable header, payload"@en .

:PUBLISHPacket rdf:type owl:Class ;
               rdfs:isDefinedBy <> ;
               rdfs:subClassOf :ControlPacket ;
               rdfs:label "PUBLISHPacket"@en ;
               rdfs:comment "A PUBLISH packet is sent from a Client to a Server or from a Server to a Client to transport an Application Message."@en .

:SUBSCRIBEPacket rdf:type owl:Class ;
                 rdfs:isDefinedBy <> ;
                 rdfs:subClassOf :ControlPacket ;
                 rdfs:label "SUBSCRIBEPacket"@en ;
                 rdfs:comment "The SUBSCRIBE packet is sent from the Client to the Server to create one or more Subscriptions. Each Subscription registers a Client’s interest in one or more Topics."@en .

:UNSUBSCRIBEPacket rdf:type owl:Class ;
                   rdfs:isDefinedBy <> ;
                   rdfs:subClassOf :ControlPacket ;
                   rdfs:label "UNSUBSCRIBEPacket"@en ;
                   rdfs:comment "An UNSUBSCRIBE packet is sent by the Client to the Server, to unsubscribe from topics."@en .

# TODO other packet types?